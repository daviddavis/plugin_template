COMMIT?=HEAD
WORKDIR?=.
VENV?=$(WORKDIR)/.venv

ifeq ($(BIN),)
ifneq ($(wildcard $(VENV)),)
BIN=$(VENV)/bin/
endif
endif

all: lint test

setup-venv: $(VENV)/bin/activate

$(VENV)/bin/activate:
	python3 -m venv $(VENV)
	$(VENV)/bin/pip install -qr dev_requirements.txt
	$(VENV)/bin/pip install -qr test_requirements.txt
	$(VENV)/bin/pip install -qe .
	echo "Set up venv environment at $(VNV)"

lint: lint-black lint-flake8 check-plugin-api check-manifest

lint-black:
	$(BIN)black --version
	$(BIN)black --check .

lint-flake8:
	$(BIN)flake8 --config flake8.cfg

check-commit:
	python ./.travis/validate_commit_message.py $(COMMIT)

check-plugin-api:
	./.travis/check_pulpcore_imports.sh

check-manifest:
	$(BIN)check-manifest

bindings:
	# TODO: pbindings won't work here. need to recreate this functionality
	pbindings pulpcore python

test-unit:
	$(BIN)django-admin test --noinput

test-functional: setup-venv bindings
	$(BIN)pytest -v -r sx --color=yes --pyargs pulpcore.tests.functional

test: test-unit test-functional
